{"version":3,"sources":["AddItem.js","CompletionButtons.js","ListItem.js","ListItemContainer.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["AddItem","props","type","id","name","onChange","onKeyUp","value","textValue","onClick","CompletionButtons","onShowAllClick","showingAllTasks","onRemoveAllClick","ListItem","classes","checked","push","showAll","className","join","htmlFor","task","ListItemContainer","listItems","map","item","includes","List","useState","addingNewItem","setAddingNewItem","data","setData","length","idCounter","setIdCounter","isChecked","setIsChecked","setShowingAllTasks","handleAdd","e","newId","parseInt","target","filter","key","initialData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8898e951.chunk.js","sourcesContent":["function AddItem(props) {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        id=\"new-item-text\"\n        name=\"new-item-create\"\n        onChange={props.onChange}\n        onKeyUp={props.onKeyUp}\n        value={props.textValue}\n      />\n      <button onClick={props.onClick}>Add Item</button>\n    </div>\n  );\n}\n\nexport default AddItem;\n","function CompletionButtons(props) {\n  return (\n    <div>\n      <button onClick={props.onShowAllClick}>\n        {props.showingAllTasks ? \"Show Uncompleted Tasks\" : \"Show All Tasks\"}\n      </button>\n      <button onClick={props.onRemoveAllClick}>\n        Remove Completed Tasks\n      </button>\n    </div>\n  );\n}\n\nexport default CompletionButtons;\n","function ListItem(props) {\n  const classes = [\"item\"];\n  if (props.checked) {\n    classes.push(\"checked\");\n    if (!props.showAll) {\n      classes.push(\"invisible\")\n    }\n  }\n\n  return (\n    <div className={classes.join(\" \")} id={props.id}>\n      <input\n        id={props.id}\n        name={props.id}\n        onChange={props.onChange}\n        type=\"checkbox\"\n      />\n      <label htmlFor={props.id}>\n        {props.task}\n      </label>\n    </div>\n  );\n}\n\nexport default ListItem;\n","import ListItem from \"./ListItem\";\n\nfunction ListItemContainer(props) {\n  return (\n    <div>\n      {props.listItems.map((item) => (\n        <ListItem\n          checked={props.checked.includes(item.id)}\n          id={item.id}\n          key={item.id}\n          onChange={props.onChange}\n          showAll={props.showAll}\n          task={item.task}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default ListItemContainer;\n","import { useState } from \"react\";\nimport AddItem from \"./AddItem\";\nimport CompletionButtons from \"./CompletionButtons\";\nimport ListItemContainer from \"./ListItemContainer\";\n\nfunction List(props) {\n  const [addingNewItem, setAddingNewItem] = useState(\"\");\n  const [data, setData] = useState(props.listItems);\n  const [idCounter, setIdCounter] = useState(data.length);\n  const [isChecked, setIsChecked] = useState([]);\n  const [showingAllTasks, setShowingAllTasks] = useState(true);\n\n  function handleAdd() {\n    setData([...data, {\n      id: idCounter,\n      task: addingNewItem\n    }]);\n    setIdCounter(idCounter + 1);\n    setAddingNewItem(\"\");\n  }\n\n  function handleAddChange(e) {\n    setAddingNewItem(e.target.value);\n  }\n\n  function handleEnter(e) {\n    if (e.key === \"Enter\") {\n      handleAdd();\n    }\n  }\n\n  function handleIsCheckedChange(e) {\n    var newId = parseInt(e.target.id);\n    if (isChecked.includes(newId)) {\n      setIsChecked(isChecked.filter((id) => id !== newId));\n    } else {\n      setIsChecked([...isChecked, newId]);\n    }\n  }\n\n  function handleRemoveAllClick() {\n    setData(data.filter(e => !isChecked.includes(e.id)))\n  }\n\n  function handleShowAllClick() {\n    setShowingAllTasks(!showingAllTasks);\n  }\n\n  return (\n    <div>\n      <ListItemContainer\n        checked={isChecked}\n        listItems={data}\n        onChange={handleIsCheckedChange}\n        showAll={showingAllTasks}\n      />\n      <AddItem\n        onChange={handleAddChange}\n        onClick={handleAdd}\n        onKeyUp={handleEnter}\n        textValue={addingNewItem}\n      />\n      <CompletionButtons\n        onShowAllClick={handleShowAllClick}\n        onRemoveAllClick={handleRemoveAllClick}\n        showingAllTasks={showingAllTasks}\n      />\n    </div>\n  );\n}\n\nexport default List;\n","import \"./App.css\";\nimport List from \"./List\";\n\nlet initialData = [\n  {\n    id: 0,\n    task: \"Call Mom\",\n  },\n  {\n    id: 1,\n    task: \"Text John\",\n  },\n  {\n    id: 2,\n    task: \"test task 1\",\n  },\n  {\n    id: 3,\n    task: \"test task 2\",\n  },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>CS124 Lab 2</h1>\n      <List listItems={initialData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}